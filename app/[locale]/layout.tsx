// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

// import Footer from "./component_/Footer";
// import Navbar from "./Navbar/Navbar";
// import { DataProvider } from "./ContextApi/ContextApi";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body>
//            <div className="w-full h-full flex flex-col overflow-hidden overflow-x-hidden">
//         <DataProvider>
//         <Navbar/>
//         {children}
//         <Footer/>
//         </DataProvider>
//            </div>
//       </body>
//     </html>
//   );
// }
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound} from 'next/navigation';
import {routing} from '@/i18n/routing';
import { DataProvider } from './ContextApi/ContextApi';
import Navbar from './Navbar/Navbar';
import Footer from './component_/Footer';
 
export default async function LocaleLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}) {
  // Ensure that the incoming `locale` is valid
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
 
  return (
    <html lang={locale}>
        <body>
           <div className="w-full h-full flex flex-col overflow-hidden overflow-x-hidden">
        <DataProvider>
        <Navbar/>
         <NextIntlClientProvider>{children}</NextIntlClientProvider>

        <Footer/>
        </DataProvider>
         </div>
      </body>

    </html>
  );
}